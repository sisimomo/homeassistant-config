alarm_control_panel:
  platform: manual
  name: 'Alarm'
  code: !secret alarm_code
  pending_time: 20
  trigger_time: 10

automation:
  #== ARMING / DISARMING ==#

  # Disarm away alarm if someone is home
  - alias: disarm1
    trigger:
      - platform: state
        entity_id: device_tracker.janis_handy
        to: 'home'
      - platform: state
        entity_id: device_tracker.lena_handy
        to: 'home'
    condition:
      condition: state
      entity_id: alarm_control_panel.alarm
      state: 'armed_away'
    action:
      service: alarm_control_panel.alarm_disarm
      data:
        entity_id: 'alarm_control_panel.alarm'
        code: !secret alarm_code

  # Arm alarm if nobody is home for 30 minutes
  - alias: arm1
    trigger:
      - platform: state
        entity_id: device_tracker.janis_handy
        to: 'not_home'
        for:
          minutes: 30
      - platform: state
        entity_id: device_tracker.lena_handy
        to: 'not_home'
        for:
          minutes: 30
    condition:
      condition: template
      value_template: '{{ states.device_tracker.janis_handy.state == "not_home" and states.device_tracker.lena_handy.state == "not_home" and alarm_control_panel.alarm != "armed_away" }}'
    action:
      service: alarm_control_panel.alarm_arm_away
      data:
        entity_id: 'alarm_control_panel.alarm'
        code: !secret alarm_code

  #== TRIGGERS ==#

  # Trigger alarm if there is motion, the entrance door is opened or the balcony door is opened and alarm is armed_home or armed_away
  - alias: trigger1
    trigger:
      - platform: event
        event_type: motion
        event_data:
          entity_id: binary_sensor.motion_sensor_158d00010f8100
      - platform: state
        entity_id: binary_sensor.door_window_sensor_158d000154b7c0
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: binary_sensor.motion_sensor_158d00010f8100
        from: 'off'
        to: 'on'
    condition:
      condition: template
      value_template: '{{ states.alarm_control_panel.alarm.state == "armed_away" or states.alarm_control_panel.alarm.state == "armed_home" }}'
    action:
      service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.alarm

  #== PENDING ==#

  # Make lights orange if alarm is pending from armed state
  - alias: pending1
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarm
        from: 'armed_away'
        to: 'pending'
      - platform: state
        entity_id: alarm_control_panel.alarm
        from: 'armed_home'
        to: 'pending'
    action:
      service: light.turn_on
      data:
        entity_id: group.light_livingroom
        rgb_color: [255, 128, 0]
        brightness: 255

  # Turn off orange pending lights, if alarm gets disarmed
  - alias: disarm2
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarm
        from: 'pending'
        to: 'disarmed'
    action:
      service: light.turn_off
      data:
        entity_id: group.light_livingroom

  #== DISARM ==#

  # Kill Alarm lights and stop recording if alarm gets untriggered
  - alias: disarm3
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarm
        from: 'triggered'
        to: 'disarmed'
    action:
      - service: script.turn_on
        entity_id: script.kill_alarm_lights
      - service: script.turn_on
        entity_id: script.kill_alarm_lights
      - service: script.turn_on
        entity_id: script.kill_alarm_lights
      - service: script.turn_on
        entity_id: script.kill_alarm_lights

  #== ACTION ==#

  # Enable alarm lights
  - alias: alarm_lights
    trigger:
      platform: state
      entity_id: alarm_control_panel.alarm
      state: triggered
    action:
      - service: script.turn_on
        entity_id: script.alarm_lights_loop

alert:
  alarm:
    name: '`[ALARM]` Your Alarm has been triggered!!!' 
    entity_id: alarm_control_panel.alarm
    state: 'triggered'
    repeat: 1
    notifiers:
     - janis_handy_telegram

#== SCRIPTS ==#
script:
  alarm_lights_pause:
    sequence:
      - delay:
          seconds: 3
      - service: script.alarm_lights_loop

  alarm_lights_loop:
    sequence:
      - service: light.turn_on
        data:
          entity_id: group.light_livingroom
          rgb_color: [255, 0, 0]
          brightness: 255
      - service: light.turn_on
        data:
          entity_id: light.gateway_light_286c07889d7e
          rgb_color: [255, 0, 0]
          brightness: 255
      - delay:
          seconds: 3
      - service: light.turn_off
        data:
          entity_id: group.light_livingroom
      - service: light.turn_off
        data:
          entity_id: light.gateway_light_286c07889d7e
      - service: script.alarm_lights_pause

  kill_alarm_lights:
    sequence:
      - service: script.turn_off
        data:
          entity_id: script.alarm_lights_loop
      - service: script.turn_off
        data:
          entity_id: script.alarm_lights_pause
      - service: light.turn_off
        data:
          entity_id: group.light_livingroom
      - service: light.turn_off
        data:
          entity_id: light.gateway_light_286c07889d7e